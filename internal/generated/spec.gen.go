// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
