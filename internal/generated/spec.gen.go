// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"vwAAAP//ogTaPDUnAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
