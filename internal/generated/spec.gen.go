// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xYW28TRxT+K2jaxwXbQFrkN0QRTaVKqKnUBxShwZ7YC95LZ8chUWSJ3SXgNEmTInLh",
	"1iQkhBA3JlVamgQXfsx4becpf6Gamd31rr2+gAqKIkVjr+ec75zzndtOgJSm6JqKVGKA5AQwUlmkQH68",
	"BBWE4aA6orFPOtZ0hImM+LM0GpVTSJyMFJZ1ImsqSAJqlai9Ru1X1L5P7XlqbVDrgJplav9GrQMgATQG",
	"FT2HQBLE0mg0NiqnkRYHEiDjOvvSIFhWM6AgATndTbpZru7fqd2da+wsO8UXzs58SHSKI09EiVWhgroL",
	"bqxt1TcOnfnZkEj22Nqg9p7/0yjpBiJEVjPcRV9iNAKS4ItY08Ex17sx4doh79fsJoEkb3RH5kwvVP99",
	"Wv/lTW1ymoFT8wpIXgMwReRRBCQgq/4RYaxhMBy0wH/WgrogAYx+zssYpZk0OQ1cL0lelAN2DfvXtRs3",
	"UYow6C3GtHFlRI+yy16g9h/UrlB71TsUjyvFEd04rkwFXZ8YkIACx2SFWftVXAKKrIoPCR+MrBKUQZih",
	"ySI5kyXtCusP3zr2HDXLR6Vlai4cV4rUfkit19R6S+1Si86vz/bUc1tOk2wXNc7BZHcdibMXeihpiQzz",
	"o6fXt7NzQIwfkKFrqoHaIyLyoxvbavaks/on89bkrFNcYuQiSOmT17xkFHxgEGM43maNhyHKgMuMvZ3h",
	"pxGBci4S/hYvPRWWxq/26n/tCjuOK8Wjxen6o8P6wy0RhbbMFQnTVWJ9q3y09nuoKrBQYRXmrhsIjyJ8",
	"XUiJEK8gw4AZ1E0B87vNmVKh1n5ITfWwWHu6Qs0lam5T824A1Aw3Sjx6x/+v9MxwD6SHKSoC3yKYI9nO",
	"Iehcrv7mtsx7Lqs49iyrWHtmoGJlufTxcH3yvuwF31UdhXqIRyG6Y2U1g/TES+1tHoQDVujtJ/xQDIUi",
	"fob/RcVY1/CHangm6l5Qw4U4Lwt+wRsYODfwQWWCG+qiiXQS999HFIfG1o5TfkzNBWrNUHOTE3E61J/m",
	"dmsLu6EaF0Aej6qiIm96lZVAXLu2yn+4X++xltKxW+K8qrKAcTmYeEdN19kxxMjmT/tipG+N1KW4sbuy",
	"S9CUphKY4pwRYwkYQiqWM1A99SOCCrO1pbk8WW9sLjZdHjD4lH+VmuWLVwerbxdqL5cZdJnkQqIvXh0E",
	"EhhF2BBCE5zPBQloOlKhLoMkOHcmfuYc4xAkWe7oGNTlWIAYGUQ+gh/V/TuNzZfUeuDMLTrvlryi9Qhw",
	"3RgyOYNpkARXEHF7GGCeFkzlis/G457nkMoxQF3PySl+N3bTYEC8Iba/ZtXMBB6bDv1QQGdeGvgfEYT7",
	"XKT+QPHwqj7nn5FXFIjH2zEK37LAQzaMXXOnATDMbgXjGJsQh8F0IWYQzAjXKbK1mfuByK4EY/r9d1cv",
	"XxF1kpe2CrVX+JS8S60HR5Oz1fdrfcR5SOhnjMNQQQRhBr3jdDL4DZ92QZIz1JtXvbl/MA2C+UlwHkmB",
	"gPSxJhSGe9JOyeeIrENMYmOnFXkMpU9jpOeg2ImaykY0rEACkuCGrLJwtatqi3mER1cZ8c7Hz39O4vkh",
	"nmlsTlNzg5rT1JoSA8jJzoNIB35YPtw2PiYXmDbrObVL1HrPl8XVn9CNIS11C5HoDDFLtV9f1N889jPk",
	"uFJ0du/Vnr1wyiuN9Ukxq3bIGV/2yU2bRDzR7kAft2d7iTvNpvYS84m7C06dSMonPh+c2tNtQYJONO/A",
	"ra5Ub45OkdwOz6pbobcifJ2i5rYYqNz9sK9WPuSNR5+sk7eMtJHBbY5KQQtOaCVrBdvW1F2fisiKzanP",
	"qIZ2Mmo9qD8/bGzPdg6g2AQvZVHq1qcMYcvC2ctz5kxtZ93Z36dmScz51f2dVi/ay7wUH1DbpNZLvnW9",
	"DrhQaGQu9PeQqOopXhwElQMJ5HGObayE6MlYLKelYI5tXXx3A6wKujraX3pFQDpafH50Z521D0aHPWpP",
	"sb1QvGvkq6FbpV28BWmiJ7fr5bX6/L3mVZctUVfdDHeKb5x3azznIxpVU5JbUQrDhf8CAAD//95tyEA5",
	"FgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
