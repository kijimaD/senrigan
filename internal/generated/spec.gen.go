// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9Raa08bV/r/KtX5/1/sSia2ubRZ3lXdqstqV4pC1X2xQtbBPsbTzq0zxzRshJSZCYkJ",
	"ZGETICEhJSQkEFhcumlSLib5MMczxq/4Cqtzzow94zm+EG2iVJWqwfY819/z/J7nnFwFWU3RNRWp2ATD",
	"V4GZLSAFsscvoIIMOKLmNfqXbmg6MrCE2Hc5NCllEX8ys4akY0lTwTAg9i5xNojzgjg3ibNI7E1iHxKr",
	"TJx/EfsQJAC6AhVdRmAYJHNoMjkp5ZCWAgmAp3T6oYkNSZ0A0wkg5TpJt8rVg2ve9YXTvftu6Zm7txgR",
	"nWWWp0ViVaigzoJPN7Zrm0fu4u2ISPq1vUmcl42fiqSbCGNJnWAh+n8D5cEw+L9kM8BJP7pJHtrR4Nf0",
	"TQxx0exsmTu3XD1Zq9167c3MUePUogKG/w5gFkuTCCSApDYekWFoBhgLe9D4rsXq6QQw0PdFyUA5Kk3K",
	"AT9KiSDLIb/GGq9r49+iLKamtzgTw0peF/nlLBPn38SpEOdx8FA6q5TyunlWmQ2HPj2UAAq8IinU209T",
	"CaBIKv8j3TBGUjGaQAa1poCkiQKOK6wtHbvOArHK9d37xFo+q5SIs0Tsn4h9TJzdFp2f9XfV84OUw4UO",
	"atzDmc460v0XuyhpyQyNY6C34Wf7hJiXkalrqoniGeH10QltnjPjPv6ZRmvmtlu6R8GFkdIjrlnLmG4Y",
	"Bg0DTsW8CWwQOqCpeWlCZLeOiwbK0AgZk1DmDuRhUcZgGPSbDLJhf7w7Zffk5/rK3fqDpbNKqbZ1pyUJ",
	"/KVYHSMVjssoF5GPjSJKxOL1lnWFx6zj3SP2obc26946TNaub7i3DpuixzVNRlClshV4JZM3oIIy48V8",
	"HhkRJemLqVTMibVr7uZWtGAWiePQT+wNYr9iXfYIiFCqFbFexJm8ZigQR8Ol6IOxeLk3j9xbD5ngF0zV",
	"j0xPKRIy/mIsZt8XoSzhqYiSgZiCuWVaIXet05c7n/wu3Tf0exCq7qFuRWcgU5OLXFZnJF5u/pK9h5FK",
	"/8jk4JQZNTEW7+rbR9685a2t11funlVK3r1n3vI+x03coqKeg7gdItMFIA6A9/AXb2Wf4zISW/ZGvEHH",
	"KuRL2t/bF3gOYSjJwgLfZlCtUKJ78bL2yz6v9LNKqb4yV1s9qi1tR1wN1QSjlI4Sa9vl+saPEYdYYFQo",
	"Z0xkTCIjw6UIxCvINOEE6qSAdiaH9dIKsQ8iaqpHJW9tnVj3iLVDrOsho+aZU/yrN+z/6105MDAysEnU",
	"o/6EoIwL7VPQntBfMV8Wg5BVXOc25fSXVojTC0z6VJTBgw+7me+rFll9OVJAUYvbMWcvhJlOUTLrmSW7",
	"k+Mf+lNdCbEHKhxlqBPPsAXNxF3zQ5wdBrpDOvo5D9lDtB2mLrD/RJjWNeO8Gh7xSSis4SKLbXMEGhoa",
	"GDrX4MAc9a0RBonhpT2U+eSYMbWikUVCSD+heXRuEPspcVaItePdf0ynIPuEleqht7wvbJ7ZomEgFWfY",
	"FiCYpRbeuGvb9fn/1JaOqwd7fAKuLR0HxLdJnF0+p3cm8C6M/WL91Dnpztthzs6Y0j9QO4NZTt+FrGVo",
	"4gwnlLhsOgW8mW/EgDOIt2q7pWOQAAHBA/pyH5YUJFxPsGbACZQpmqLQVE/e1pa2OcJ96+0Dt3xYv7nA",
	"ipVtc3RInw0rlFT86aDQHaxhKPPcCkBT+3XB90QIDhHpjU6ZGCnd0Np2uD3d3nPLD4i1TOx5Yj1nNDEX",
	"2a8W9rkxzTYUqjNhf+Os1m0YCXWhjqveryz4Nyho2m57RlFVaTqZHAMHj5qu08cIXzR/2hNfNLxJdBzO",
	"vwmKtWXkEKK2erLmlRbpCLVq9wzTXNGAAUUJp6dVu75yt2Vu6h9QBofaDPO5DFMVZzbWWmqv7OrRjXOW",
	"Ul6SUUaHInILtyfhuQfEMEnlylA3UfMp05/qH+hL9/el0hfazNhMq7j3RLQGbSZetyHGHrw49NmnPVUy",
	"b31ZrahiYSGH211rBbGFRlA4jEzayny16C6WglJdF9JJQ8WAUD4tjo5pr6/MuVtz5+6g7Wq3lVbihYuy",
	"mpHj9Uh7hIwwyjWOahJAh6wtj3WrVlZoYQCGYZHoNPyxyv2LxKeenvZ5XuvxVX46ASR/pspqKoZZJpKf",
	"rYFRpBrSBFQ/+RpBhdVzNLcPn54+X2n23VDX+6TxKrHKn18aqR4ve1v3aR4kLEdEf35pBCTAJDJMLjTN",
	"RjC68OpIhboEhsHAhdSFARZXXGCOJqEuJUPsMIHwO5BE9eDa6fMtYt9xF1bcN/eCvWIVMN28cY3kwDD4",
	"CmH/IAawxZXRFVPcn0oFkUMc/VDXZSnL3k1+a/LOx3PQ24lLkw5Zbtoc6nDTaZSG/ocWRFdRof7QvBss",
	"ZgzWZlFRoDEVt5HHliYeTpgU9NxNMEbfCucxeZU/jOSmkyY2KODaZdabvxnK7Ho4p3/986UvvwoGnx1m",
	"7Do76t0n9p36zO3q240e8jzK9VPE0X6JkUFNb3vENvJHdmQLhoFfxX75BA6BcNnzw6dmQno4654e6wo7",
	"pShjSYcGTl7pU6QrKNdnIF2G/GC/qazRGscllaYrriqWc0FEH1PgDaYGPyTwGimeP30+R6xNYs0Re5af",
	"EXzcdSAM4Pnq4QfzXWqBarOfsCHCp7S/ofFRLfsdwuIKsXa9fz6rvX7QqJCzSsndv+E9euaW10+fzvC5",
	"o03NNGR/vGWTTqXjAWzYHfi+y4LmMO7fD4ah2Y8S8ukPZ463tsNB0A7mbbDVEerNGUyI7ejxynbkao+d",
	"eBJrhw9n/iVHT1Q+GuxI743JhdutMMXNgSnsx0faz1qNjVG7H9lmfpurUbZxDyTOdGTRWuXLAW1hsWHc",
	"n+p6yvTXgXr/Fup9Dm9cgzC2Yhc+0iSLjY2luhFaYba71nWrljC43Jnt6sldYpU5ys6Z6g9Q3T3UdSf/",
	"/HXyt5F+geG9gqB5XCgEQcvBQFw1PyE6z5LWsOcbrvo9gqC5gPeU/7Avv5HMh03uWv78PqtHIo/clBH7",
	"Tu3J0enO7faZ5fdzXxRQ9rv3mdKWa8BugbTmvb2n7sEBsXb5+W71YK81qM59Nn0fEsci9ha7G/opFEWu",
	"kYawcf4sGpj5dW5YOUiAoiGDYVDAWB9OJmUtC+WCZmJ2wwTo4OvriBOtwKT6ypP6taeMbrfZ1dUscR75",
	"/0aKXWD5g7lv73TiatdBplbeqC3eaL7qt2XRq/5Q55Zeu2822Jgn2E2akvwhUiRJDGF+K9QU0MTu9Nj0",
	"fwMAAP//NLlvXTUnAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
