// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package generated

import (
	"time"
)

// Defines values for CameraInfoStatus.
const (
	CameraInfoStatusActive   CameraInfoStatus = "active"
	CameraInfoStatusError    CameraInfoStatus = "error"
	CameraInfoStatusInactive CameraInfoStatus = "inactive"
)

// Defines values for HealthResponseStatus.
const (
	Healthy HealthResponseStatus = "healthy"
)

// Defines values for SystemStatusResponseStatus.
const (
	Running  SystemStatusResponseStatus = "running"
	Starting SystemStatusResponseStatus = "starting"
	Stopping SystemStatusResponseStatus = "stopping"
)

// Defines values for VideoStatus.
const (
	VideoStatusCompleted VideoStatus = "completed"
	VideoStatusError     VideoStatus = "error"
	VideoStatusPaused    VideoStatus = "paused"
	VideoStatusRecording VideoStatus = "recording"
)

// CameraInfo defines model for CameraInfo.
type CameraInfo struct {
	// Device カメラデバイスのパス
	Device string `json:"device"`

	// Id カメラの一意識別子
	Id string `json:"id"`

	// Name カメラの表示名
	Name     string         `json:"name"`
	Settings CameraSettings `json:"settings"`

	// Status カメラの動作状態
	Status *CameraInfoStatus `json:"status,omitempty"`
}

// CameraInfoStatus カメラの動作状態
type CameraInfoStatus string

// CameraSettings defines model for CameraSettings.
type CameraSettings struct {
	// Fps フレームレート（fps）
	Fps int `json:"fps"`

	// Height 画像の高さ（ピクセル）
	Height int `json:"height"`

	// Width 画像の幅（ピクセル）
	Width int `json:"width"`
}

// CamerasResponse defines model for CamerasResponse.
type CamerasResponse struct {
	// Cameras カメラ情報の配列
	Cameras []CameraInfo `json:"cameras"`
}

// Config defines model for Config.
type Config struct {
	// CaptureInterval 撮影間隔（秒）
	CaptureInterval *string `json:"capture_interval,omitempty"`

	// Enabled タイムラプス有効/無効
	Enabled *bool `json:"enabled,omitempty"`

	// MaxFrameBuffer 最大フレームバッファサイズ
	MaxFrameBuffer *int `json:"max_frame_buffer,omitempty"`

	// OutputFormat 出力フォーマット
	OutputFormat *string `json:"output_format,omitempty"`

	// Quality 動画品質 (1-5)
	Quality    *int        `json:"quality,omitempty"`
	Resolution *Resolution `json:"resolution,omitempty"`

	// RetentionDays 保持期間（日数）
	RetentionDays *int `json:"retention_days,omitempty"`

	// UpdateInterval 動画更新間隔
	UpdateInterval *string `json:"update_interval,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	// Details エラーの詳細情報（開発用）
	Details *string `json:"details,omitempty"`

	// Error エラーの種類
	Error string `json:"error"`

	// Message エラーメッセージ
	Message string `json:"message"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	// Status サーバーの稼働状況
	Status HealthResponseStatus `json:"status"`
}

// HealthResponseStatus サーバーの稼働状況
type HealthResponseStatus string

// Resolution defines model for Resolution.
type Resolution struct {
	// Height 高さ（ピクセル）
	Height int `json:"height"`

	// Width 幅（ピクセル）
	Width int `json:"width"`
}

// ServerInfo defines model for ServerInfo.
type ServerInfo struct {
	// Host サーバーのリッスンホスト
	Host string `json:"host"`

	// Port サーバーのリッスンポート
	Port int `json:"port"`
}

// StatusResponse defines model for StatusResponse.
type StatusResponse struct {
	// ActiveSources アクティブな映像ソース数
	ActiveSources *int `json:"active_sources,omitempty"`

	// CurrentVideo 現在録画中の動画ファイル名
	CurrentVideo *string `json:"current_video,omitempty"`

	// Enabled タイムラプス機能有効/無効
	Enabled *bool `json:"enabled,omitempty"`

	// FrameBufferSize 現在のフレームバッファサイズ
	FrameBufferSize *int `json:"frame_buffer_size,omitempty"`

	// LastUpdate 最後の動画更新時刻
	LastUpdate *time.Time `json:"last_update,omitempty"`

	// StorageUsed 使用ストレージ容量（バイト）
	StorageUsed *int64 `json:"storage_used,omitempty"`

	// TotalVideos 総動画数
	TotalVideos *int `json:"total_videos,omitempty"`
}

// SystemStatusResponse defines model for SystemStatusResponse.
type SystemStatusResponse struct {
	// Cameras 設定されているカメラの台数
	Cameras int        `json:"cameras"`
	Server  ServerInfo `json:"server"`

	// Status システムの動作状態
	Status SystemStatusResponseStatus `json:"status"`
}

// SystemStatusResponseStatus システムの動作状態
type SystemStatusResponseStatus string

// Video defines model for Video.
type Video struct {
	// Date 作成日時
	Date time.Time `json:"date"`

	// Duration 動画時間
	Duration *string `json:"duration,omitempty"`

	// EndTime 録画終了時刻
	EndTime *time.Time `json:"end_time,omitempty"`

	// FilePath ファイルパス
	FilePath string `json:"file_path"`

	// FileSize ファイルサイズ（バイト）
	FileSize int64 `json:"file_size"`

	// FrameCount 総フレーム数
	FrameCount *int `json:"frame_count,omitempty"`

	// SourceCount 結合された映像ソース数
	SourceCount *int `json:"source_count,omitempty"`

	// StartTime 録画開始時刻
	StartTime *time.Time `json:"start_time,omitempty"`

	// Status タイムラプス状態
	Status VideoStatus `json:"status"`
}

// VideoStatus タイムラプス状態
type VideoStatus string

// VideoList defines model for VideoList.
type VideoList = []Video
