openapi: 3.0.3
info:
  title: Senrigan API
  description: 監視カメラシステム Senrigan のAPI仕様
  version: 1.0.0
  contact:
    name: Senrigan Team

servers:
  - url: http://localhost:8080
    description: 開発サーバー

paths:
  /health:
    get:
      summary: ヘルスチェック
      description: サーバーの稼働状況を確認します
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: サーバーが正常に動作中
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  
  /api/status:
    get:
      summary: システム状態取得
      description: サーバーとカメラの詳細な状態情報を取得します
      operationId: getStatus
      tags:
        - Status
      responses:
        '200':
          description: システム状態情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatusResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cameras:
    get:
      summary: カメラ一覧取得
      description: 設定されているカメラの一覧を取得します
      operationId: getCameras
      tags:
        - Camera
      responses:
        '200':
          description: カメラ一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamerasResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cameras/{cameraId}/stream:
    get:
      summary: カメラMJPEGストリーム
      description: 指定されたカメラのMJPEGストリーミングを配信します
      operationId: getCameraStream
      tags:
        - Camera
      parameters:
        - name: cameraId
          in: path
          required: true
          description: カメラID
          schema:
            type: string
            example: "camera1"
      responses:
        '200':
          description: MJPEGストリーム
          content:
            multipart/x-mixed-replace:
              schema:
                type: string
                format: binary
        '404':
          description: カメラが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cameras/{cameraId}/ws:
    get:
      summary: カメラWebSocketストリーム
      description: 指定されたカメラのリアルタイムWebSocketストリーミングに接続します（将来実装）
      operationId: getCameraWebSocket
      tags:
        - Camera
      parameters:
        - name: cameraId
          in: path
          required: true
          description: カメラID
          schema:
            type: string
            example: "camera1"
      responses:
        '101':
          description: WebSocket接続にアップグレード
        '404':
          description: カメラが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: 未実装
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timelapse/videos:
    get:
      summary: タイムラプス動画一覧取得
      description: 結合されたタイムラプス動画一覧を取得します
      operationId: getTimelapseVideos
      tags:
        - Timelapse
      responses:
        '200':
          description: タイムラプス動画一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoList'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timelapse/config:
    get:
      summary: タイムラプス設定取得
      description: ファイルベースのタイムラプス設定を取得します
      operationId: getTimelapseConfig
      tags:
        - Timelapse
      responses:
        '200':
          description: タイムラプス設定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/timelapse/status:
    get:
      summary: タイムラプスシステム状態
      description: タイムラプスシステム全体の状態を取得します
      operationId: getTimelapseStatus
      tags:
        - Timelapse
      responses:
        '200':
          description: タイムラプスシステム状態
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [healthy]
          description: サーバーの稼働状況
          example: "healthy"
    
    SystemStatusResponse:
      type: object
      required:
        - status
        - server
        - cameras
      properties:
        status:
          type: string
          enum: [running, starting, stopping]
          description: システムの動作状態
          example: "running"
        server:
          $ref: '#/components/schemas/ServerInfo'
        cameras:
          type: integer
          description: 設定されているカメラの台数
          minimum: 0
          example: 1
    
    ServerInfo:
      type: object
      required:
        - host
        - port
      properties:
        host:
          type: string
          description: サーバーのリッスンホスト
          example: "0.0.0.0"
        port:
          type: integer
          description: サーバーのリッスンポート
          minimum: 1
          maximum: 65535
          example: 8080
    
    CamerasResponse:
      type: object
      required:
        - cameras
      properties:
        cameras:
          type: array
          items:
            $ref: '#/components/schemas/CameraInfo'
          description: カメラ情報の配列
    
    CameraInfo:
      type: object
      required:
        - id
        - name
        - device
        - settings
      properties:
        id:
          type: string
          description: カメラの一意識別子
          example: "camera1"
        name:
          type: string
          description: カメラの表示名
          example: "メインカメラ"
        device:
          type: string
          description: カメラデバイスのパス
          example: "/dev/video0"
        settings:
          $ref: '#/components/schemas/CameraSettings'
        status:
          type: string
          enum: [active, inactive, error]
          description: カメラの動作状態
          example: "active"
    
    CameraSettings:
      type: object
      required:
        - fps
        - width
        - height
      properties:
        fps:
          type: integer
          description: フレームレート（fps）
          minimum: 1
          maximum: 60
          example: 15
        width:
          type: integer
          description: 画像の幅（ピクセル）
          minimum: 1
          example: 1280
        height:
          type: integer
          description: 画像の高さ（ピクセル）
          minimum: 1
          example: 720
    
    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: エラーの種類
          example: "internal_server_error"
        message:
          type: string
          description: エラーメッセージ
          example: "予期しないエラーが発生しました"
        details:
          type: string
          description: エラーの詳細情報（開発用）

    Config:
      type: object
      properties:
        enabled:
          type: boolean
          description: タイムラプス有効/無効
          default: true
        capture_interval:
          type: string
          description: 撮影間隔（秒）
          default: "2s"
          example: "2s"
        update_interval:
          type: string
          description: 動画更新間隔
          default: "1h"
          example: "1h"
        output_format:
          type: string
          description: 出力フォーマット
          default: "mp4"
          example: "mp4"
        quality:
          type: integer
          description: 動画品質 (1-5)
          minimum: 1
          maximum: 5
          default: 3
        resolution:
          $ref: '#/components/schemas/Resolution'
        max_frame_buffer:
          type: integer
          description: 最大フレームバッファサイズ
          default: 1800
        retention_days:
          type: integer
          description: 保持期間（日数）
          default: 30

    Resolution:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          description: 幅（ピクセル）
          example: 1920
        height:
          type: integer
          description: 高さ（ピクセル）
          example: 1080

    Video:
      type: object
      required:
        - date
        - file_path
        - file_size
        - status
      properties:
        date:
          type: string
          format: date-time
          description: 作成日時
        file_path:
          type: string
          description: ファイルパス
          example: "/data/timelapse/timelapse_2023-12-01.mp4"
        file_size:
          type: integer
          format: int64
          description: ファイルサイズ（バイト）
          example: 1048576
        duration:
          type: string
          description: 動画時間
          example: "1h23m45s"
        frame_count:
          type: integer
          description: 総フレーム数
          example: 1800
        start_time:
          type: string
          format: date-time
          description: 録画開始時刻
        end_time:
          type: string
          format: date-time
          description: 録画終了時刻
        status:
          type: string
          enum: [recording, completed, error, paused]
          description: タイムラプス状態
        source_count:
          type: integer
          description: 結合された映像ソース数
          example: 3

    VideoList:
      type: array
      items:
        $ref: '#/components/schemas/Video'


    StatusResponse:
      type: object
      properties:
        enabled:
          type: boolean
          description: タイムラプス機能有効/無効
        active_sources:
          type: integer
          description: アクティブな映像ソース数
        total_videos:
          type: integer
          description: 総動画数
        storage_used:
          type: integer
          format: int64
          description: 使用ストレージ容量（バイト）
        current_video:
          type: string
          description: 現在録画中の動画ファイル名
        frame_buffer_size:
          type: integer
          description: 現在のフレームバッファサイズ
        last_update:
          type: string
          format: date-time
          description: 最後の動画更新時刻

tags:
  - name: Health
    description: ヘルスチェック関連のエンドポイント
  - name: Status
    description: システム状態管理
  - name: Camera
    description: カメラ制御とストリーミング
  - name: Timelapse
    description: タイムラプス動画機能
