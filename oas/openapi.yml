openapi: 3.0.3
info:
  title: Senrigan API
  description: 監視カメラシステム Senrigan のAPI仕様
  version: 1.0.0
  contact:
    name: Senrigan Team

servers:
  - url: http://localhost:8080
    description: 開発サーバー

paths:
  /health:
    get:
      summary: ヘルスチェック
      description: サーバーの稼働状況を確認します
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: サーバーが正常に動作中
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  
  /api/status:
    get:
      summary: システム状態取得
      description: サーバーとカメラの詳細な状態情報を取得します
      operationId: getStatus
      tags:
        - Status
      responses:
        '200':
          description: システム状態情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cameras:
    get:
      summary: カメラ一覧取得
      description: 設定されているカメラの一覧を取得します
      operationId: getCameras
      tags:
        - Camera
      responses:
        '200':
          description: カメラ一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CamerasResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cameras/{cameraId}/stream:
    get:
      summary: カメラストリーム接続
      description: 指定されたカメラのストリーミングに接続します（WebSocket）
      operationId: getCameraStream
      tags:
        - Camera
      parameters:
        - name: cameraId
          in: path
          required: true
          description: カメラID
          schema:
            type: string
            example: "camera1"
      responses:
        '101':
          description: WebSocket接続にアップグレード
        '404':
          description: カメラが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [healthy]
          description: サーバーの稼働状況
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          description: レスポンス生成時刻（RFC3339形式）
          example: "2023-10-01T12:00:00Z"
    
    StatusResponse:
      type: object
      required:
        - status
        - server
        - cameras
        - timestamp
      properties:
        status:
          type: string
          enum: [running, starting, stopping]
          description: システムの動作状態
          example: "running"
        server:
          $ref: '#/components/schemas/ServerInfo'
        cameras:
          type: integer
          description: 設定されているカメラの台数
          minimum: 0
          example: 1
        timestamp:
          type: string
          format: date-time
          description: レスポンス生成時刻（RFC3339形式）
          example: "2023-10-01T12:00:00Z"
    
    ServerInfo:
      type: object
      required:
        - host
        - port
      properties:
        host:
          type: string
          description: サーバーのリッスンホスト
          example: "0.0.0.0"
        port:
          type: integer
          description: サーバーのリッスンポート
          minimum: 1
          maximum: 65535
          example: 8080
    
    CamerasResponse:
      type: object
      required:
        - cameras
      properties:
        cameras:
          type: array
          items:
            $ref: '#/components/schemas/CameraInfo'
          description: カメラ情報の配列
    
    CameraInfo:
      type: object
      required:
        - id
        - name
        - device
        - settings
      properties:
        id:
          type: string
          description: カメラの一意識別子
          example: "camera1"
        name:
          type: string
          description: カメラの表示名
          example: "メインカメラ"
        device:
          type: string
          description: カメラデバイスのパス
          example: "/dev/video0"
        settings:
          $ref: '#/components/schemas/CameraSettings'
        status:
          type: string
          enum: [active, inactive, error]
          description: カメラの動作状態
          example: "active"
    
    CameraSettings:
      type: object
      required:
        - fps
        - width
        - height
      properties:
        fps:
          type: integer
          description: フレームレート（fps）
          minimum: 1
          maximum: 60
          example: 15
        width:
          type: integer
          description: 画像の幅（ピクセル）
          minimum: 1
          example: 1280
        height:
          type: integer
          description: 画像の高さ（ピクセル）
          minimum: 1
          example: 720
    
    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: エラーの種類
          example: "internal_server_error"
        message:
          type: string
          description: エラーメッセージ
          example: "予期しないエラーが発生しました"
        details:
          type: string
          description: エラーの詳細情報（開発用）
        timestamp:
          type: string
          format: date-time
          description: エラー発生時刻（RFC3339形式）
          example: "2023-10-01T12:00:00Z"

tags:
  - name: Health
    description: ヘルスチェック関連のエンドポイント
  - name: Status
    description: システム状態管理
  - name: Camera
    description: カメラ制御とストリーミング
